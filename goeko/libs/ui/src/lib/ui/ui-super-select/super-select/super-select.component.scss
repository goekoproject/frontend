$border-color: var(--state-border-default);
$border-color-disabled: transparent;
$border-color-error: var(--border-error);
$background-disbaled: var(--bg-field);
$background-error: var(--bg-select-error);
$background-overlay: #ffff;
$color-label: #2b2b2b;
$color-label-pressed: var(--primary--main);

@mixin status($status, $color, $background: none) {
  &#{$status} {
    border: 1px solid $color;
    background: $background;
    background-color: $background-overlay;
  }
}

//default size medium
@mixin size($size, $width: 325, $height: 56) {
  &#{$size} {
    width: inherit;
    height: #{$height}px;
  }
  @if $size ==--xsmall {
    .select_value {
      padding: 0;
    }
    &#{$size} > .select_label:has(+ div) {
      display: none;
    }
  }
}

.super-select {
  display: block;
  border: 1px solid rgb(217, 219, 233);
  border-radius: 8px;
  overflow: hidden;
  max-width: var(--medium-width-field);
  &:focus-visible {
    outline-color: rgb(111, 87, 205);
    box-shadow: rgba(111, 87, 205, 0.25) 0px 0px 1px 2px;
  }
}
.super-select[disabled] {
  .select {
    border: 1px solid $border-color-disabled;
    background-color: $background-disbaled;
    cursor: not-allowed;
    i {
      color: $background-disbaled;
    }
  }
}
.select-dropdown {
  position: fixed;
  z-index: 10000;
}

.select {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 1rem;
  font-size: 1rem;
  height: inherit;
  cursor: pointer;
  position: relative;

  // SIZE
  @include size(--large, 325, 64);
  @include size(--medium, 325, 43);
  @include size(--small, 325, 48);
  @include size(--xsmall, 200, 32);

  // STATUS
  @include status(--default, $border-color);
  @include status(--error, $border-color-error, $background-error);
  @include status(--success, $border-color);

  &_options {
    background-color: $background-overlay;
    width: 100%;
    box-shadow: 0px 4px 8px 0px #a0a3bd99;
    overflow-y: scroll;
    max-height: 20rem;
    min-width: fit-content;
  }
  &_label {
    font-size: 15px;
    color: $color-label;
    transition: all 0.5s;
    &:hover {
      color: $color-label-pressed;
    }
  }
  &_value {
    padding-top: 1rem;
    width: inherit;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }
  &_arrow {
    margin-left: auto;
  }
}

.cdk-overlay-backdrop {
  transition: visibility 1ms linear, opacity 1ms linear;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  pointer-events: auto;
}

.before-icon-select {
  width: 13%;
  position: absolute;
  z-index: 2;
  display: flex;
  align-items: center;
  color: var(--grayscale-label);
  left: 11px;
}

.before-icon-select:not(:empty) ~ div {
  padding-left: 2.5rem;
}
.super-select {
  label {
    background-color: transparent;
    color: #174ea6;
    border-radius: 24px;
    touch-action: manipulation;
    width: auto;
    will-change: transform, opacity;
    height: 48px;
    justify-content: center;
    letter-spacing: 0.25px;
    display: inline-flex;
    align-items: center;
    font-weight: 600;
  }
}

.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {
  opacity: 0;
}
ui-super-select[readonly='true'] {
  border: none;
  pointer-events: none;

  span {
    display: none;
  }
  .select {
    padding: 0;
  }
}
